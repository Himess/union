{
  // modules provide specific funtionality for ibc. they take both an info object, which is the same per module type, and a config object, which is specific to the module implementation (i.e. rpc urls, contract addresses).
  "modules": {
    // state modules describe how to read state from a chain
    //
    // info.chain_id is the id of the chain the module reads state from
    // info.ibc_spec_id is the ibc specification the module reads state for
    "state": [
      // preconfigured state module to read state from the ibc-union implementation running on union-testnet-9
      {
        "enabled": true,
        "path": "./target/debug/voyager-state-module-cosmos-sdk-union",
        "info": {
          "chain_id": "union-testnet-9",
          "ibc_spec_id": "ibc-union"
        },
        "config": {
          "ws_url": "http://rpc.testnet-9.union.build",
          "grpc_url": "http://grpc.testnet-9.union.build",
          "ibc_host_contract_address": "union17e93ukhcyesrvu72cgfvamdhyracghrx4f7ww89rqjg944ntdegscxepme"
        }
      },
      // preconfigured state module to read state from the ibc-union implementation running on the holesky ethereum testnet.
      {
        "enabled": true,
        "path": "./target/debug/voyager-state-module-ethereum",
        "info": {
          // holesky chain id.
          "chain_id": "17000",
          // since this is reading state for an ibc-union implementation, this must stay as ibc-union. any other value will error on startup.
          "ibc_spec_id": "ibc-union"
        },
        "config": {
          // the address of the IBCHandler contract on holesky.
          "ibc_handler_address": "0xfa4E502A3bf5f4Bc3EF0e17960b3Cd868d70E809",
          // an archive rpc url pointing to holesky.
          "eth_rpc_api": "https://rpc.17000.holesky.chain.kitchen"
        }
      },
      // the state module to read state from the ibc-union implementation running on your chain. fill in the empty values with the relevant information.
      {
        "enabled": true,
        "path": "./target/debug/voyager-state-module-cosmos-sdk-union",
        "info": {
          "chain_id": "",
          // since this is reading state for an ibc-union implementation, this must stay as ibc-union. any other value will error on startup.
          "ibc_spec_id": "ibc-union"
        },
        "config": {
          // the rpc url for your chain (the tendermint rpc, default port 26657). this can be http or websocket.
          "ws_url": "",
          // the grpc url for your chain (the cosmos sdk grpc, default port 9090).
          "grpc_url": "",
          // the contract address of the ibc-union contract on your chain.
          "ibc_host_contract_address": ""
        }
      }
    ],
    // proof modules provide state proofs of ibc state on a chain. these are separate from state modules since the storage backend of a chain is separate from the vm implementation (think zkevms vs regular evm, the interface is the same but the trie implementation is different). similar to the state module, they take two info values:
    //
    // info.chain_id is the id of the chain the module reads proofs from
    // info.ibc_spec_id is the ibc specification the module reads proofs for
    "proof": [
      {
        // preconfigured proof module for union-testnet-9.
        "enabled": true,
        "path": "./target/debug/voyager-proof-module-cosmos-sdk-union",
        "info": {
          "chain_id": "union-testnet-9",
          "ibc_spec_id": "ibc-union"
        },
        "config": {
          "ws_url": "http://rpc.testnet-9.union.build",
          "grpc_url": "http://grpc.testnet-9.union.build",
          "ibc_host_contract_address": "union17e93ukhcyesrvu72cgfvamdhyracghrx4f7ww89rqjg944ntdegscxepme"
        }
      },
      // preconfigured proof module for the holesky ethereum testnet.
      {
        "enabled": true,
        "path": "./target/debug/voyager-proof-module-ethereum",
        "info": {
          "chain_id": "17000",
          "ibc_spec_id": "ibc-union"
        },
        "config": {
          "ibc_handler_address": "0xfa4E502A3bf5f4Bc3EF0e17960b3Cd868d70E809",
          "eth_rpc_api": "https://rpc.17000.holesky.chain.kitchen"
        }
      },
      // the state module to read proofs from the ibc-union implementation running on your chain. for a cosmwasm chain running ibc-union, all of the values are the same as the state module.
      {
        "enabled": true,
        "path": "./target/debug/voyager-proof-module-cosmos-sdk-union",
        "info": {
          "chain_id": "",
          "ibc_spec_id": "ibc-union"
        },
        "config": {
          "ws_url": "",
          "grpc_url": "",
          "ibc_host_contract_address": ""
        }
      }
    ],
    // consensus modules provide functionality for querying the latest (potentially finalized) height and timestamp from a chain. they take two info values:
    //
    // info.chain_id is the id of the chain the module provides finality information for.
    // info.consensus_type is the type of consensus mechanism the chain `info.chain_id` uses.
    "consensus": [
      // preconfigured consensus module for union-testnet-9.
      {
        "enabled": true,
        "path": "./target/debug/voyager-consensus-module-cometbls",
        "info": {
          "chain_id": "union-testnet-9",
          "consensus_type": "cometbls"
        },
        "config": {
          "ws_url": "http://rpc.testnet-9.union.build",
          "grpc_url": "http://grpc.testnet-9.union.build",
          "ibc_host_contract_address": "union17e93ukhcyesrvu72cgfvamdhyracghrx4f7ww89rqjg944ntdegscxepme"
        }
      },
      // preconfigured consensus module for the holesky ethereum testnet.
      {
        "enabled": true,
        "path": "./target/debug/voyager-consensus-module-ethereum",
        "info": {
          "chain_id": "17000",
          "consensus_type": "ethereum"
        },
        "config": {
          "chain_spec": "mainnet",
          "eth_rpc_api": "https://rpc.17000.holesky.chain.kitchen",
          "eth_beacon_rpc_api": "http://localhost:9596"
        }
      },
      // the consensus module for your tendermint-based chain.
      {
        "enabled": true,
        "path": "./target/debug/voyager-consensus-module-tendermint",
        "info": {
          "chain_id": "",
          "consensus_type": "tendermint"
        },
        // these values are the same as the stae and proof modules.
        "config": {
          "ws_url": "",
          "grpc_url": ""
        }
      }
    ],
    // client modules provide encoding and decoding for different light client states (client state, consensus state, header (i.e. client update), and proofs.
    // these are all preconfigured for a cosmos&comwasm<->union<->holesky setup.
    "client": [
      {
        "enabled": true,
        "path": "./target/debug/voyager-client-module-state-lens-evm",
        "info": {
          "client_type": "state-lens/evm",
          "consensus_type": "ethereum",
          "ibc_interface": "ibc-cosmwasm",
          "ibc_spec_id": "ibc-union"
        }
      },
      {
        "enabled": true,
        "path": "./target/debug/voyager-client-module-state-lens-ics23-ics23",
        "info": {
          "client_type": "state-lens/ics23-ics23",
          "consensus_type": "tendermint",
          "ibc_interface": "ibc-solidity",
          "ibc_spec_id": "ibc-union"
        }
      },
      {
        "enabled": true,
        "path": "./target/debug/voyager-client-module-cometbls",
        "info": {
          "client_type": "cometbls",
          "consensus_type": "cometbls",
          "ibc_interface": "ibc-solidity",
          "ibc_spec_id": "ibc-union"
        }
      },
      {
        "enabled": true,
        "path": "./target/debug/voyager-client-module-cometbls",
        "info": {
          "client_type": "cometbls",
          "consensus_type": "cometbls",
          "ibc_interface": "ibc-cosmwasm",
          "ibc_spec_id": "ibc-union"
        }
      },
      {
        "enabled": true,
        "path": "./target/debug/voyager-client-module-cometbls",
        "info": {
          "client_type": "cometbls",
          "consensus_type": "cometbls",
          "ibc_interface": "ibc-go-v8/08-wasm",
          "ibc_spec_id": "ibc-union"
        }
      },
      {
        "enabled": true,
        "path": "./target/debug/voyager-client-module-tendermint",
        "info": {
          "client_type": "tendermint",
          "consensus_type": "tendermint",
          "ibc_interface": "ibc-cosmwasm",
          "ibc_spec_id": "ibc-union"
        }
      },
      {
        "enabled": true,
        "path": "./target/debug/voyager-client-module-ethereum",
        "info": {
          "client_type": "ethereum",
          "consensus_type": "ethereum",
          "ibc_interface": "ibc-cosmwasm",
          "ibc_spec_id": "ibc-union"
        },
        "config": {
          "chain_spec": "mainnet"
        }
      }
    ],
    // client bootstrap modules provide functionality for bootstrapping a client of the configured chain, tracked by a client type, on a counterparty.
    "client_bootstrap": [
      // client bootstrap module for a state lens client connecting to holesky, running on your chain.
      {
        "enabled": true,
        "path": "./target/debug/voyager-client-bootstrap-module-state-lens-evm",
        "info": {
          "chain_id": "17000",
          "client_type": "state-lens/evm"
        },
        "config": {
          "l1_client_id": 5,
          "l2_client_id": 1,
          "timestamp_offset": 0,
          "state_root_offset": 32,
          "storage_root_offset": 64
        }
      },
      {
        "enabled": true,
        "path": "./target/debug/voyager-client-bootstrap-module-state-lens-ics23-ics23",
        "info": {
          "chain_id": "",
          "client_type": "state-lens/ics23-ics23"
        },
        "config": {
          "l1_client_id": 1,
          "l2_client_id": 2,
          "l2_contract_address": "stars1s0x3yq0pmltxq56f4yppgmd02ret3uj5k9ftj6ug9c7lc379sw7qv396zm"
        }
      },
      {
        "enabled": true,
        "path": "./target/debug/voyager-client-bootstrap-module-ethereum",
        "info": {
          "chain_id": "17000",
          "client_type": "ethereum"
        },
        "config": {
          "chain_spec": "minimal",
          "ibc_handler_address": "0xfa4E502A3bf5f4Bc3EF0e17960b3Cd868d70E809",
          "eth_rpc_api": "https://rpc.17000.holesky.chain.kitchen",
          "eth_beacon_rpc_api": "http://localhost:9596"
        }
      },
      {
        "enabled": true,
        "path": "./target/debug/voyager-client-bootstrap-module-cometbls",
        "info": {
          "chain_id": "union-testnet-9",
          "client_type": "cometbls"
        },
        "config": {
          "ws_url": "http://rpc.testnet-9.union.build",
          "grpc_url": "http://grpc.testnet-9.union.build",
          "ibc_host_contract_address": "union17e93ukhcyesrvu72cgfvamdhyracghrx4f7ww89rqjg944ntdegscxepme"
        }
      },
      {
        "enabled": true,
        "path": "./target/debug/voyager-client-bootstrap-module-tendermint",
        "info": {
          "chain_id": "",
          "client_type": "tendermint"
        },
        "config": {
          "ws_url": "",
          "grpc_url": ""
        }
      }
    ]
  },
  "plugins": [
    {
      "enabled": true,
      "path": "./target/debug/voyager-event-source-plugin-cosmos-sdk",
      "config": {
        "chain_id": "union-testnet-9",
        "ws_url": "http://rpc.testnet-9.union.build",
        "grpc_url": "http://grpc.testnet-9.union.build"
      }
    },
    {
      "enabled": true,
      "path": "./target/debug/voyager-event-source-plugin-cosmos-sdk",
      "config": {
        "chain_id": "",
        "ws_url": "",
        "grpc_url": ""
      }
    },
    {
      "enabled": true,
      "path": "./target/debug/voyager-event-source-plugin-ethereum",
      "config": {
        "chain_id": "17000",
        "ibc_handler_address": "0xfa4E502A3bf5f4Bc3EF0e17960b3Cd868d70E809",
        "eth_rpc_api": "https://rpc.17000.holesky.chain.kitchen",
        "eth_beacon_rpc_api": "http://localhost:9596"
      }
    },
    {
      "enabled": true,
      "path": "./target/debug/voyager-transaction-plugin-cosmos-sdk",
      "config": {
        "chain_id": "union-testnet-9",
        "ibc_host_contract_address": "union17e93ukhcyesrvu72cgfvamdhyracghrx4f7ww89rqjg944ntdegscxepme",
        "keyring": {
          "name": "union-devnet",
          "keys": [
            {
              "type": "raw",
              "name": "alice",
              "key": "0xaa820fa947beb242032a41b6dc9a8b9c37d8f5fbcda0966b1ec80335b10a7d6f"
            }
          ]
        },
        "gas_config": {
          "gas_price": "1.0",
          "gas_denom": "muno",
          "gas_multiplier": "1.1",
          "max_gas": 10000000
        },
        "ws_url": "http://rpc.testnet-9.union.build",
        "grpc_url": "http://grpc.testnet-9.union.build"
      }
    },
    {
      "enabled": true,
      "path": "./target/debug/voyager-transaction-plugin-cosmos-sdk",
      "config": {
        "chain_id": "",
        "ibc_host_contract_address": "stars1s0x3yq0pmltxq56f4yppgmd02ret3uj5k9ftj6ug9c7lc379sw7qv396zm",
        "keyring": {
          "name": "stars-testnet",
          "keys": [
            {
              "type": "raw",
              "name": "alice",
              "key": "0x089f6742fe5a3d9897695089ab5551a57af0bb503caedb471626f618f423eaa0"
            }
          ]
        },
        "gas_config": {
          "gas_price": "1.0",
          "gas_denom": "ustars",
          "gas_multiplier": "1.1",
          "max_gas": 10000000
        },
        "ws_url": "",
        "grpc_url": ""
      }
    },
    {
      "enabled": true,
      "path": "./target/debug/voyager-transaction-plugin-ethereum",
      "config": {
        "chain_id": "17000",
        "ibc_handler_address": "0xfa4E502A3bf5f4Bc3EF0e17960b3Cd868d70E809",
        "multicall_address": "0x9fd9D9528c8373D990a1380B9414bDE179007A35",
        "keyring": {
          "name": "ethereum-devnet",
          "keys": [
            {
              "type": "raw",
              "name": "dev-key0",
              "key": "0x4e9444a6efd6d42725a250b650a781da2737ea308c839eaccb0f7f3dbd2fea77"
            },
            {
              "type": "raw",
              "name": "dev-key1",
              "key": "0xd9c5dc47ed678fc3e63249953866d79e5cf48418e79d8eec1a985be7393ef3b9"
            },
            {
              "type": "raw",
              "name": "eth-key-2",
              "key": "0x0a917066d306f09670e47729bfd4384f4afcac98493c65b9733870a434d71f29"
            },
            {
              "type": "raw",
              "name": "eth-key-3",
              "key": "0xff45ae2a6c4899294e898a171e15de8a4d2557852378364f8684c6a1520ccd7d"
            },
            {
              "type": "raw",
              "name": "eth-key-4",
              "key": "0x27ae0c7b8d7c698e41b173265490a4c64b4e39ae78599166e003f868f12140fd"
            }
          ]
        },
        "eth_rpc_api": "https://rpc.17000.holesky.chain.kitchen"
      }
    },
    {
      "enabled": true,
      "path": "./target/debug/voyager-plugin-transaction-batch",
      "config": {
        "chain_id": "union-testnet-9",
        "client_configs": {
          "min_batch_size": 1,
          "max_batch_size": 4,
          "max_wait_time": {
            "secs": 1,
            "nanos": 0
          }
        }
      }
    },
    {
      "enabled": true,
      "path": "./target/debug/voyager-plugin-transaction-batch",
      "config": {
        "chain_id": "",
        "client_configs": {
          "min_batch_size": 1,
          "max_batch_size": 4,
          "max_wait_time": {
            "secs": 1,
            "nanos": 0
          }
        }
      }
    },
    {
      "enabled": true,
      "path": "./target/debug/voyager-plugin-transaction-batch",
      "config": {
        "chain_id": "17000",
        "client_configs": {
          "min_batch_size": 1,
          "max_batch_size": 5,
          "max_wait_time": {
            "secs": 1,
            "nanos": 0
          }
        }
      }
    },
    {
      "enabled": true,
      "path": "./target/debug/voyager-client-update-plugin-cometbls",
      "config": {
        "chain_id": "union-testnet-9",
        "ws_url": "http://rpc.testnet-9.union.build",
        "grpc_url": "http://grpc.testnet-9.union.build",
        "prover_endpoints": [
          "http://localhost:9999"
        ]
      }
    },
    {
      "enabled": true,
      "path": "./target/debug/voyager-client-update-plugin-state-lens-evm",
      "config": {
        "l0_client_id": 1,
        "l1_client_id": 2,
        "l1_chain_id": "union-testnet-9",
        "l2_chain_id": "17000",
        "l1_ws_url": "http://rpc.testnet-9.union.build",
        "l2_rpc_url": "https://rpc.17000.holesky.chain.kitchen"
      }
    },
    {
      "enabled": true,
      "path": "./target/debug/voyager-client-update-plugin-state-lens-ics23-ics23",
      "config": {
        "l0_client_id": 1,
        "l1_client_id": 2,
        "l1_chain_id": "union-testnet-9",
        "l2_chain_id": "",
        "l1_ws_url": "http://rpc.testnet-9.union.build",
        "l2_ws_url": ""
      }
    },
    {
      "enabled": true,
      "path": "./target/debug/voyager-client-update-plugin-tendermint",
      "config": {
        "chain_id": "",
        "ws_url": "",
        "grpc_url": ""
      }
    },
    {
      "enabled": true,
      "path": "./target/debug/voyager-client-update-plugin-ethereum",
      "config": {
        "chain_id": "17000",
        "chain_spec": "minimal",
        "ibc_handler_address": "0xfa4E502A3bf5f4Bc3EF0e17960b3Cd868d70E809",
        "eth_rpc_api": "https://rpc.17000.holesky.chain.kitchen",
        "eth_beacon_rpc_api": "http://localhost:9596"
      }
    }
  ],
  "voyager": {
    "num_workers": 50,
    "queue": {
      "type": "pg-queue",
      "database_url": "postgres://postgres:postgrespassword@127.0.0.1:5432/default",
      "max_connections": 50,
      "min_connections": 50
    },
    "optimizer_delay_milliseconds": 100
  }
}